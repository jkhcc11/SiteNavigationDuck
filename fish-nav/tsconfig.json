{
  "compilerOptions": {
    //编译目标为esnext
    "target": "esnext",
    //启用类字段定义语法，允许在类中使用 public, private, 和 protected 修饰符来定义实例字段。
    //"useDefineForClassFields": true,
    "module": "esnext",
    //指定要包含在编译过程中的库文件
    "lib": ["esnext", "dom"],
    //跳过对声明文件的类型检查，可以提高编译速度。
    "skipLibCheck": true,
    //这里使用@ 别名指向src  除了在这里标识 还需要在vite.config.ts标识
    "baseUrl": ".",
    "paths": {
      "@/*": ["src/*"]
    },

    /* Bundler mode */
    //指定模块解析策略为 Node.js 的模块解析方式。
    "moduleResolution": "node",
    //允许导入 JSON 文件作为模块。
    "resolveJsonModule": true,
    //兼容导入导出
    "esModuleInterop": true,
    //保留 JSX 语法，不进行转换。
    "jsx": "preserve",

    /* Linting */
    //启用所有严格类型检查选项。
    "strict": true,
    //禁止未使用的局部变量。
    //"noUnusedLocals": true,
    //禁止未使用的函数参数。
    //"noUnusedParameters": true,
    //禁止在 switch 语句中出现没有 break 或 return 的 case 分支。
    //"noFallthroughCasesInSwitch": true
  },
  "include": ["src/**/*.ts", "src/**/*.d.ts", "src/**/*.tsx", "src/**/*.vue"]
}
